import cv2
import matplotlib.pyplot as plt

# Function to perform rotation
def rotate_image(image, angle):
    rows, cols = image.shape[:2]
    M = cv2.getRotationMatrix2D((cols / 2, rows / 2), angle, 1)
    return cv2.warpAffine(image, M, (cols, rows))

# Scaling & Rotation
# Scaling (Resize)
I = cv2.imread(r'E:/Sai teja mat/TA/images/flower1.png')
plt.subplot(2, 2, 1)
plt.imshow(cv2.cvtColor(I, cv2.COLOR_BGR2RGB))
plt.title('Original Image')

s = float(input('Enter Scaling Factor: '))
j = cv2.resize(I, None, fx=s, fy=s)
cv2.imshow("sample",j)
plt.subplot(2, 2, 2)
plt.imshow(cv2.cvtColor(j, cv2.COLOR_BGR2RGB))
plt.title('Scaled Image')

# Rotation
K = rotate_image(j, 60)
plt.subplot(2, 2, 3)
plt.imshow(cv2.cvtColor(K, cv2.COLOR_BGR2RGB))
plt.title('Rotated Image 60deg')

R = rotate_image(j, -45)
plt.subplot(2, 2, 4)
plt.imshow(cv2.cvtColor(R, cv2.COLOR_BGR2RGB))
plt.title('Rotated Image 45deg')

plt.tight_layout()
plt.show()

# Rest of the code for Resized images using different methods...

# Display the color image and its Resized images by different methods
# Display the color image
plt.figure()

plt.subplot(2, 2, 1)
plt.imshow(cv2.cvtColor(I, cv2.COLOR_BGR2RGB))
plt.title('Original Image')

# Display Resized image by Bilinear method
B = cv2.resize(I, None, fx=5, fy=5, interpolation=cv2.INTER_LINEAR)
plt.subplot(2, 2, 2)
plt.imshow(cv2.cvtColor(B, cv2.COLOR_BGR2RGB))
plt.title('Bilinear Image')

# Display Resized image by Nearest method
C = cv2.resize(I, None, fx=5, fy=5, interpolation=cv2.INTER_NEAREST)
plt.subplot(2, 2, 3)
plt.imshow(cv2.cvtColor(C, cv2.COLOR_BGR2RGB))
plt.title('Nearest Image')

# Display Resized image by Bicubic method
D = cv2.resize(I, None, fx=5, fy=5, interpolation=cv2.INTER_CUBIC)
plt.subplot(2, 2, 4)
plt.imshow(cv2.cvtColor(D, cv2.COLOR_BGR2RGB))
plt.title('Bicubic Image')

plt.tight_layout()
plt.show()
